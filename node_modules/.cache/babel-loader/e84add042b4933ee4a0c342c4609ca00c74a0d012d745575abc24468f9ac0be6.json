{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Chat}from\"./components/Chat\";import{Auth}from\"./components/Auth.js\";import{AppWrapper}from\"./components/AppWrapper\";import Cookies from\"universal-cookie\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const cookies=new Cookies();function ChatApp(){const[isAuth,setIsAuth]=useState(cookies.get(\"auth-token\"));const[isInChat,setIsInChat]=useState(null);const[room,setRoom]=useState(\"\");if(!isAuth){return/*#__PURE__*/_jsx(AppWrapper,{isAuth:isAuth,setIsAuth:setIsAuth,setIsInChat:setIsInChat,children:/*#__PURE__*/_jsx(Auth,{setIsAuth:setIsAuth})});}return/*#__PURE__*/_jsx(AppWrapper,{isAuth:isAuth,setIsAuth:setIsAuth,setIsInChat:setIsInChat,children:!isInChat?/*#__PURE__*/_jsxs(\"div\",{className:\"room\",children:[/*#__PURE__*/_jsx(\"label\",{children:\" Type room name: \"}),/*#__PURE__*/_jsx(\"input\",{onChange:e=>setRoom(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsInChat(true);},children:\"Enter Chat\"})]}):/*#__PURE__*/_jsx(Chat,{room:room})});}export default ChatApp;","map":{"version":3,"names":["React","useState","useEffect","Chat","Auth","AppWrapper","Cookies","jsx","_jsx","jsxs","_jsxs","cookies","ChatApp","isAuth","setIsAuth","get","isInChat","setIsInChat","room","setRoom","children","className","onChange","e","target","value","onClick"],"sources":["C:/Users/lovek/Desktop/study/resume projects/chatify/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { Auth } from \"./components/Auth.js\";\nimport { AppWrapper } from \"./components/AppWrapper\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\n\nconst cookies = new Cookies();\n\nfunction ChatApp() {\n  const [isAuth, setIsAuth] = useState(cookies.get(\"auth-token\"));\n  const [isInChat, setIsInChat] = useState(null);\n  const [room, setRoom] = useState(\"\");\n\n  if (!isAuth) {\n    return (\n      <AppWrapper\n        isAuth={isAuth}\n        setIsAuth={setIsAuth}\n        setIsInChat={setIsInChat}\n      >\n        <Auth setIsAuth={setIsAuth} />\n      </AppWrapper>\n    );\n  }\n\n  return (\n    <AppWrapper isAuth={isAuth} setIsAuth={setIsAuth} setIsInChat={setIsInChat}>\n      {!isInChat ? (\n        <div className=\"room\">\n          <label> Type room name: </label>\n          <input onChange={(e) => setRoom(e.target.value)} />\n          <button\n            onClick={() => {\n              setIsInChat(true);\n            }}\n          >\n            Enter Chat\n          </button>\n        </div>\n      ) : (\n        <Chat room={room} />\n      )}\n    </AppWrapper>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,mBAAmB,CACxC,OAASC,IAAI,KAAQ,sBAAsB,CAC3C,OAASC,UAAU,KAAQ,yBAAyB,CACpD,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CACtC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAL,OAAO,CAAC,CAAC,CAE7B,QAAS,CAAAM,OAAOA,CAAA,CAAG,CACjB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAACU,OAAO,CAACI,GAAG,CAAC,YAAY,CAAC,CAAC,CAC/D,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACiB,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEpC,GAAI,CAACY,MAAM,CAAE,CACX,mBACEL,IAAA,CAACH,UAAU,EACTQ,MAAM,CAAEA,MAAO,CACfC,SAAS,CAAEA,SAAU,CACrBG,WAAW,CAAEA,WAAY,CAAAG,QAAA,cAEzBZ,IAAA,CAACJ,IAAI,EAACU,SAAS,CAAEA,SAAU,CAAE,CAAC,CACpB,CAAC,CAEjB,CAEA,mBACEN,IAAA,CAACH,UAAU,EAACQ,MAAM,CAAEA,MAAO,CAACC,SAAS,CAAEA,SAAU,CAACG,WAAW,CAAEA,WAAY,CAAAG,QAAA,CACxE,CAACJ,QAAQ,cACRN,KAAA,QAAKW,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnBZ,IAAA,UAAAY,QAAA,CAAO,mBAAiB,CAAO,CAAC,cAChCZ,IAAA,UAAOc,QAAQ,CAAGC,CAAC,EAAKJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAE,CAAC,cACnDjB,IAAA,WACEkB,OAAO,CAAEA,CAAA,GAAM,CACbT,WAAW,CAAC,IAAI,CAAC,CACnB,CAAE,CAAAG,QAAA,CACH,YAED,CAAQ,CAAC,EACN,CAAC,cAENZ,IAAA,CAACL,IAAI,EAACe,IAAI,CAAEA,IAAK,CAAE,CACpB,CACS,CAAC,CAEjB,CAEA,cAAe,CAAAN,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}